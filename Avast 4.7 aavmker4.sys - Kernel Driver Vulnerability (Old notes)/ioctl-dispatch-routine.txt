Driver Object 
==============
struct _DRIVER_OBJECT, 15 elements, 0xa8 bytes
   +0x000 Type             : Int2B
   +0x002 Size             : Int2B
   +0x004 DeviceObject     : Ptr32 to struct _DEVICE_OBJECT, 25 elements, 0xb8 bytes
   +0x008 Flags            : Uint4B
   +0x00c DriverStart      : Ptr32 to Void
   +0x010 DriverSize       : Uint4B
   +0x014 DriverSection    : Ptr32 to Void
   +0x018 DriverExtension  : Ptr32 to struct _DRIVER_EXTENSION, 6 elements, 0x1c bytes
   +0x01c DriverName       : struct _UNICODE_STRING, 3 elements, 0x8 bytes
   +0x024 HardwareDatabase : Ptr32 to struct _UNICODE_STRING, 3 elements, 0x8 bytes
   +0x028 FastIoDispatch   : Ptr32 to struct _FAST_IO_DISPATCH, 28 elements, 0x70 bytes
   +0x02c DriverInit       : Ptr32 to     long 
   +0x030 DriverStartIo    : Ptr32 to     void 
   +0x034 DriverUnload     : Ptr32 to     void 
   +0x038 MajorFunction    : [28] Ptr32 to     long 
   

Dispatch routines
==================
Driver object (8209d3b8) is for:
 \Driver\Aavmker4
Driver Extension List: (id , addr)

Device Object list:
81f24af0  

DriverEntry:   f89ca620	Aavmker4
DriverStartIo: 00000000	
DriverUnload:  00000000	
AddDevice:     00000000	

Dispatch routines:
[00] IRP_MJ_CREATE                      f89ca766	Aavmker4+0x766
[01] IRP_MJ_CREATE_NAMED_PIPE           f89ca766	Aavmker4+0x766
[02] IRP_MJ_CLOSE                       f89ca766	Aavmker4+0x766
[03] IRP_MJ_READ                        f89ca766	Aavmker4+0x766
[04] IRP_MJ_WRITE                       f89ca766	Aavmker4+0x766
[05] IRP_MJ_QUERY_INFORMATION           f89ca766	Aavmker4+0x766
[06] IRP_MJ_SET_INFORMATION             f89ca766	Aavmker4+0x766
[07] IRP_MJ_QUERY_EA                    f89ca766	Aavmker4+0x766
[08] IRP_MJ_SET_EA                      f89ca766	Aavmker4+0x766
[09] IRP_MJ_FLUSH_BUFFERS               f89ca766	Aavmker4+0x766
[0a] IRP_MJ_QUERY_VOLUME_INFORMATION    f89ca766	Aavmker4+0x766
[0b] IRP_MJ_SET_VOLUME_INFORMATION      f89ca766	Aavmker4+0x766
[0c] IRP_MJ_DIRECTORY_CONTROL           f89ca766	Aavmker4+0x766
[0d] IRP_MJ_FILE_SYSTEM_CONTROL         f89ca766	Aavmker4+0x766
[0e] IRP_MJ_DEVICE_CONTROL              f89ca98c	Aavmker4+0x98c --> MajorFunction[IRP_MJ_DEVICE_CONTROL]
[0f] IRP_MJ_INTERNAL_DEVICE_CONTROL     f89ca766	Aavmker4+0x766
[10] IRP_MJ_SHUTDOWN                    f89ca766	Aavmker4+0x766
[11] IRP_MJ_LOCK_CONTROL                f89ca766	Aavmker4+0x766
[12] IRP_MJ_CLEANUP                     f89ca766	Aavmker4+0x766
[13] IRP_MJ_CREATE_MAILSLOT             f89ca766	Aavmker4+0x766
[14] IRP_MJ_QUERY_SECURITY              f89ca766	Aavmker4+0x766
[15] IRP_MJ_SET_SECURITY                f89ca766	Aavmker4+0x766
[16] IRP_MJ_POWER                       f89ca766	Aavmker4+0x766
[17] IRP_MJ_SYSTEM_CONTROL              f89ca766	Aavmker4+0x766
[18] IRP_MJ_DEVICE_CHANGE               f89ca766	Aavmker4+0x766
[19] IRP_MJ_QUERY_QUOTA                 f89ca766	Aavmker4+0x766
[1a] IRP_MJ_SET_QUOTA                   f89ca766	Aavmker4+0x766
[1b] IRP_MJ_PNP                         f89ca766	Aavmker4+0x766


To list all the IOCTL
======================
"DriverObject -> MajorFunction[IRP_MJ_DEVICE_CONTROL] = IOCTL_dispatch_routine'

MajorFunction = +0x038 MajorFunction    : [28] Ptr32 to long 					// 0x38
IRP_MJ_DEVICE_CONTROL = [0e] IRP_MJ_DEVICE_CONTROL  f89ca98c  Aavmker4+0x98c	// 0x0e
Element size of array, pointer = 4 bytes on 32-bit platforms					// 4

Calculating:
	DriverObject + 0x38 + 0x0e * 4 = IOCTL_dispatch_routine



