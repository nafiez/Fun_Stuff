DRIVER OBJECT
==============
ntdll!_DRIVER_OBJECT
struct _DRIVER_OBJECT, 15 elements, 0xa8 bytes
   +0x000 Type             : Int2B
   +0x002 Size             : Int2B
   +0x004 DeviceObject     : Ptr32 to struct _DEVICE_OBJECT, 25 elements, 0xb8 bytes
   +0x008 Flags            : Uint4B
   +0x00c DriverStart      : Ptr32 to Void
   +0x010 DriverSize       : Uint4B
   +0x014 DriverSection    : Ptr32 to Void
   +0x018 DriverExtension  : Ptr32 to struct _DRIVER_EXTENSION, 6 elements, 0x1c bytes
   +0x01c DriverName       : struct _UNICODE_STRING, 3 elements, 0x8 bytes
   +0x024 HardwareDatabase : Ptr32 to struct _UNICODE_STRING, 3 elements, 0x8 bytes
   +0x028 FastIoDispatch   : Ptr32 to struct _FAST_IO_DISPATCH, 28 elements, 0x70 bytes
   +0x02c DriverInit       : Ptr32 to     long 
   +0x030 DriverStartIo    : Ptr32 to     void 
   +0x034 DriverUnload     : Ptr32 to     void 
   +0x038 MajorFunction    : [28] Ptr32 to     long  ----> starts at structure offset 0x38

   
IRP
====
[0e] IRP_MJ_DEVICE_CONTROL              f89ca98c	+0xf89ca98c


Driver Object structure
========================
tyeedef struct _DRIVER_OBJECT	// 15 elements, 0xA8 bytes (sizeof)
{
/*0x000*/     INT16        Type;		// 0x00
/*0x002*/     INT16        Size;		// 0x02
/*0x004*/     struct _DEVICE_OBJECT* DeviceObject;	// 0x04
/*0x008*/     ULONG32      Flags;		// 0x08
/*0x00C*/     VOID*        DriverStart;	// 0x0C
/*0x010*/     ULONG32      DriverSize;	// 0x
/*0x014*/     VOID*        DriverSection;
/*0x018*/     struct 	   _DRIVER_EXTENSION* DriverExtension;
/*0x01C*/     struct 	   _UNICODE_STRING DriverName;                          // 3 elements, 0x8 bytes (sizeof)
/*0x024*/     struct       _UNICODE_STRING* HardwareDatabase;
/*0x028*/     struct       _FAST_IO_DISPATCH* FastIoDispatch;
/*0x02C*/     PVOID 	   DriverInit;
/*0x030*/     PVOID 	   DriverStartIo;
/*0x034*/     PVOID 	   DriverUnload;
/*0x038*/     PVOID 	   MajorFunction[28];
}DRIVER_OBJECT, *PDRIVER_OBJECT;


Dispatch Routine
=================
// DriverObject->MajorFunction[IRP_MJ_DEVICE_CONTROL] = IOCTL_dispatch_routine
.text:00010748 8B 45 08                                mov     eax, [ebp+DriverObject]
.text:0001074B 68 56 04 01 00                          push    offset NotifyRoutine 					; NotifyRoutine
.text:00010750 C7 40 70 8C 09 01 00                    mov     dword ptr [eax+70h], offset sub_1098C	;	
.text:00010757 E8 42 19 00 00                          call    PsSetCreateProcessNotifyRoutine			; Create Process routine


IRP struct
===========
ntdll!_IRP
struct _IRP, 21 elements, 0x70 bytes
   +0x000 Type             : ??
   +0x002 Size             : ??
   +0x004 MdlAddress       : ???? 
   +0x008 Flags            : ??
   +0x00c AssociatedIrp    : union __unnamed, 3 elements, 0x4 bytes
      +0x000 MasterIrp        : ???? 
      +0x000 IrpCount         : ??
      +0x000 SystemBuffer     : ???? 
   +0x010 ThreadListEntry  : struct _LIST_ENTRY, 2 elements, 0x8 bytes
      +0x000 Flink            : ???? 
      +0x004 Blink            : ???? 
   +0x018 IoStatus         : struct _IO_STATUS_BLOCK, 3 elements, 0x8 bytes
      +0x000 Status           : ??
      +0x000 Pointer          : ???? 
      +0x004 Information      : ??
   +0x020 RequestorMode    : ??
   +0x021 PendingReturned  : ??
   +0x022 StackCount       : ??
   +0x023 CurrentLocation  : ??
   +0x024 Cancel           : ??
   +0x025 CancelIrql       : ??
   +0x026 ApcEnvironment   : ??
   +0x027 AllocationFlags  : ??
   +0x028 UserIosb         : ???? 
   +0x02c UserEvent        : ???? 
   +0x030 Overlay          : union __unnamed, 2 elements, 0x8 bytes
      +0x000 AsynchronousParameters : struct __unnamed, 2 elements, 0x8 bytes
         +0x000 UserApcRoutine   : ???? 
         +0x004 UserApcContext   : ???? 
      +0x000 AllocationSize   : union _LARGE_INTEGER, 4 elements, 0x8 bytes
         +0x000 LowPart          : ??
         +0x004 HighPart         : ??
         +0x000 u                : struct __unnamed, 2 elements, 0x8 bytes
         +0x000 QuadPart         : ??
   +0x038 CancelRoutine    : ???? 
   +0x03c UserBuffer       : ???? 
   +0x040 Tail             : union __unnamed, 3 elements, 0x30 bytes
      +0x000 Overlay          : struct __unnamed, 8 elements, 0x28 bytes
         +0x000 DeviceQueueEntry : struct _KDEVICE_QUEUE_ENTRY, 3 elements, 0x10 bytes
         +0x000 DriverContext    : [4] ???? 
         +0x010 Thread           : ???? 
         +0x014 AuxiliaryBuffer  : ???? 
         +0x018 ListEntry        : struct _LIST_ENTRY, 2 elements, 0x8 bytes
         +0x020 CurrentStackLocation : ???? 
         +0x020 PacketType       : ??
         +0x024 OriginalFileObject : ???? 
      +0x000 Apc              : struct _KAPC, 14 elements, 0x30 bytes
         +0x000 Type             : ??
         +0x002 Size             : ??
         +0x004 Spare0           : ??
         +0x008 Thread           : ???? 
         +0x00c ApcListEntry     : struct _LIST_ENTRY, 2 elements, 0x8 bytes
         +0x014 KernelRoutine    : ???? 
         +0x018 RundownRoutine   : ???? 
         +0x01c NormalRoutine    : ???? 
         +0x020 NormalContext    : ???? 
         +0x024 SystemArgument1  : ???? 
         +0x028 SystemArgument2  : ???? 
         +0x02c ApcStateIndex    : ??
         +0x02d ApcMode          : ??
         +0x02e Inserted         : ??
      +0x000 CompletionKey    : ???? 
Memory read error 00000043
